//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.6.6
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from C:\Users\ShohruhRed\source\repos\MyAntlr\Content\Simple.g4 by ANTLR 4.6.6

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace MyAntlr.Content {
using Antlr4.Runtime;
using Antlr4.Runtime.Atn;
using Antlr4.Runtime.Misc;
using DFA = Antlr4.Runtime.Dfa.DFA;

[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.6.6")]
[System.CLSCompliant(false)]
public partial class SimpleLexer : Lexer {
	public const int
		T__0=1, T__1=2, T__2=3, T__3=4, T__4=5, T__5=6, T__6=7, T__7=8, T__8=9, 
		T__9=10, T__10=11, T__11=12, T__12=13, T__13=14, T__14=15, T__15=16, T__16=17, 
		T__17=18, WHILE=19, BOOL_OPERATOR=20, INTEGER=21, FLOAT=22, STRING=23, 
		BOOL=24, NULL=25, WS=26, IDENTIFIER=27;
	public static string[] modeNames = {
		"DEFAULT_MODE"
	};

	public static readonly string[] ruleNames = {
		"T__0", "T__1", "T__2", "T__3", "T__4", "T__5", "T__6", "T__7", "T__8", 
		"T__9", "T__10", "T__11", "T__12", "T__13", "T__14", "T__15", "T__16", 
		"T__17", "WHILE", "BOOL_OPERATOR", "INTEGER", "FLOAT", "STRING", "BOOL", 
		"NULL", "WS", "IDENTIFIER"
	};


	public SimpleLexer(ICharStream input)
		: base(input)
	{
		_interp = new LexerATNSimulator(this,_ATN);
	}

	private static readonly string[] _LiteralNames = {
		null, "';'", "'if'", "'else'", "'='", "'('", "','", "')'", "'!'", "'*'", 
		"'/'", "'%'", "'+'", "'-'", "'=='", "'!='", "'<='", "'>='", "'{}'", null, 
		null, null, null, null, null, "'null'"
	};
	private static readonly string[] _SymbolicNames = {
		null, null, null, null, null, null, null, null, null, null, null, null, 
		null, null, null, null, null, null, null, "WHILE", "BOOL_OPERATOR", "INTEGER", 
		"FLOAT", "STRING", "BOOL", "NULL", "WS", "IDENTIFIER"
	};
	public static readonly IVocabulary DefaultVocabulary = new Vocabulary(_LiteralNames, _SymbolicNames);

	[System.Obsolete("Use Vocabulary instead.")]
	public static readonly string[] tokenNames = GenerateTokenNames(DefaultVocabulary, _SymbolicNames.Length);

	private static string[] GenerateTokenNames(IVocabulary vocabulary, int length) {
		string[] tokenNames = new string[length];
		for (int i = 0; i < tokenNames.Length; i++) {
			tokenNames[i] = vocabulary.GetLiteralName(i);
			if (tokenNames[i] == null) {
				tokenNames[i] = vocabulary.GetSymbolicName(i);
			}

			if (tokenNames[i] == null) {
				tokenNames[i] = "<INVALID>";
			}
		}

		return tokenNames;
	}

	[System.Obsolete("Use IRecognizer.Vocabulary instead.")]
	public override string[] TokenNames
	{
		get
		{
			return tokenNames;
		}
	}

	[NotNull]
	public override IVocabulary Vocabulary
	{
		get
		{
			return DefaultVocabulary;
		}
	}

	public override string GrammarFileName { get { return "Simple.g4"; } }

	public override string[] RuleNames { get { return ruleNames; } }

	public override string[] ModeNames { get { return modeNames; } }

	public override string SerializedAtn { get { return _serializedATN; } }

	public static readonly string _serializedATN =
		"\x3\xAF6F\x8320\x479D\xB75C\x4880\x1605\x191C\xAB37\x2\x1D\xBC\b\x1\x4"+
		"\x2\t\x2\x4\x3\t\x3\x4\x4\t\x4\x4\x5\t\x5\x4\x6\t\x6\x4\a\t\a\x4\b\t\b"+
		"\x4\t\t\t\x4\n\t\n\x4\v\t\v\x4\f\t\f\x4\r\t\r\x4\xE\t\xE\x4\xF\t\xF\x4"+
		"\x10\t\x10\x4\x11\t\x11\x4\x12\t\x12\x4\x13\t\x13\x4\x14\t\x14\x4\x15"+
		"\t\x15\x4\x16\t\x16\x4\x17\t\x17\x4\x18\t\x18\x4\x19\t\x19\x4\x1A\t\x1A"+
		"\x4\x1B\t\x1B\x4\x1C\t\x1C\x3\x2\x3\x2\x3\x3\x3\x3\x3\x3\x3\x4\x3\x4\x3"+
		"\x4\x3\x4\x3\x4\x3\x5\x3\x5\x3\x6\x3\x6\x3\a\x3\a\x3\b\x3\b\x3\t\x3\t"+
		"\x3\n\x3\n\x3\v\x3\v\x3\f\x3\f\x3\r\x3\r\x3\xE\x3\xE\x3\xF\x3\xF\x3\xF"+
		"\x3\x10\x3\x10\x3\x10\x3\x11\x3\x11\x3\x11\x3\x12\x3\x12\x3\x12\x3\x13"+
		"\x3\x13\x3\x13\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14\x3\x14"+
		"\x3\x14\x3\x14\x5\x14q\n\x14\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15\x3\x15"+
		"\x3\x15\x3\x15\x5\x15{\n\x15\x3\x16\x6\x16~\n\x16\r\x16\xE\x16\x7F\x3"+
		"\x17\x6\x17\x83\n\x17\r\x17\xE\x17\x84\x3\x17\x3\x17\x6\x17\x89\n\x17"+
		"\r\x17\xE\x17\x8A\x3\x18\x3\x18\a\x18\x8F\n\x18\f\x18\xE\x18\x92\v\x18"+
		"\x3\x18\x3\x18\x3\x18\a\x18\x97\n\x18\f\x18\xE\x18\x9A\v\x18\x3\x18\x5"+
		"\x18\x9D\n\x18\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19\x3\x19"+
		"\x3\x19\x5\x19\xA8\n\x19\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1A\x3\x1B\x6"+
		"\x1B\xB0\n\x1B\r\x1B\xE\x1B\xB1\x3\x1B\x3\x1B\x3\x1C\x3\x1C\a\x1C\xB8"+
		"\n\x1C\f\x1C\xE\x1C\xBB\v\x1C\x2\x2\x2\x1D\x3\x2\x3\x5\x2\x4\a\x2\x5\t"+
		"\x2\x6\v\x2\a\r\x2\b\xF\x2\t\x11\x2\n\x13\x2\v\x15\x2\f\x17\x2\r\x19\x2"+
		"\xE\x1B\x2\xF\x1D\x2\x10\x1F\x2\x11!\x2\x12#\x2\x13%\x2\x14\'\x2\x15)"+
		"\x2\x16+\x2\x17-\x2\x18/\x2\x19\x31\x2\x1A\x33\x2\x1B\x35\x2\x1C\x37\x2"+
		"\x1D\x3\x2\b\x3\x2\x32;\x3\x2$$\x3\x2))\x4\x2\v\f\xF\xF\x5\x2\x43\\\x61"+
		"\x61\x63|\x6\x2\x32;\x43\\\x61\x61\x63|\xC7\x2\x3\x3\x2\x2\x2\x2\x5\x3"+
		"\x2\x2\x2\x2\a\x3\x2\x2\x2\x2\t\x3\x2\x2\x2\x2\v\x3\x2\x2\x2\x2\r\x3\x2"+
		"\x2\x2\x2\xF\x3\x2\x2\x2\x2\x11\x3\x2\x2\x2\x2\x13\x3\x2\x2\x2\x2\x15"+
		"\x3\x2\x2\x2\x2\x17\x3\x2\x2\x2\x2\x19\x3\x2\x2\x2\x2\x1B\x3\x2\x2\x2"+
		"\x2\x1D\x3\x2\x2\x2\x2\x1F\x3\x2\x2\x2\x2!\x3\x2\x2\x2\x2#\x3\x2\x2\x2"+
		"\x2%\x3\x2\x2\x2\x2\'\x3\x2\x2\x2\x2)\x3\x2\x2\x2\x2+\x3\x2\x2\x2\x2-"+
		"\x3\x2\x2\x2\x2/\x3\x2\x2\x2\x2\x31\x3\x2\x2\x2\x2\x33\x3\x2\x2\x2\x2"+
		"\x35\x3\x2\x2\x2\x2\x37\x3\x2\x2\x2\x3\x39\x3\x2\x2\x2\x5;\x3\x2\x2\x2"+
		"\a>\x3\x2\x2\x2\t\x43\x3\x2\x2\x2\v\x45\x3\x2\x2\x2\rG\x3\x2\x2\x2\xF"+
		"I\x3\x2\x2\x2\x11K\x3\x2\x2\x2\x13M\x3\x2\x2\x2\x15O\x3\x2\x2\x2\x17Q"+
		"\x3\x2\x2\x2\x19S\x3\x2\x2\x2\x1BU\x3\x2\x2\x2\x1DW\x3\x2\x2\x2\x1FZ\x3"+
		"\x2\x2\x2!]\x3\x2\x2\x2#`\x3\x2\x2\x2%\x63\x3\x2\x2\x2\'p\x3\x2\x2\x2"+
		")z\x3\x2\x2\x2+}\x3\x2\x2\x2-\x82\x3\x2\x2\x2/\x9C\x3\x2\x2\x2\x31\xA7"+
		"\x3\x2\x2\x2\x33\xA9\x3\x2\x2\x2\x35\xAF\x3\x2\x2\x2\x37\xB5\x3\x2\x2"+
		"\x2\x39:\a=\x2\x2:\x4\x3\x2\x2\x2;<\ak\x2\x2<=\ah\x2\x2=\x6\x3\x2\x2\x2"+
		">?\ag\x2\x2?@\an\x2\x2@\x41\au\x2\x2\x41\x42\ag\x2\x2\x42\b\x3\x2\x2\x2"+
		"\x43\x44\a?\x2\x2\x44\n\x3\x2\x2\x2\x45\x46\a*\x2\x2\x46\f\x3\x2\x2\x2"+
		"GH\a.\x2\x2H\xE\x3\x2\x2\x2IJ\a+\x2\x2J\x10\x3\x2\x2\x2KL\a#\x2\x2L\x12"+
		"\x3\x2\x2\x2MN\a,\x2\x2N\x14\x3\x2\x2\x2OP\a\x31\x2\x2P\x16\x3\x2\x2\x2"+
		"QR\a\'\x2\x2R\x18\x3\x2\x2\x2ST\a-\x2\x2T\x1A\x3\x2\x2\x2UV\a/\x2\x2V"+
		"\x1C\x3\x2\x2\x2WX\a?\x2\x2XY\a?\x2\x2Y\x1E\x3\x2\x2\x2Z[\a#\x2\x2[\\"+
		"\a?\x2\x2\\ \x3\x2\x2\x2]^\a>\x2\x2^_\a?\x2\x2_\"\x3\x2\x2\x2`\x61\a@"+
		"\x2\x2\x61\x62\a?\x2\x2\x62$\x3\x2\x2\x2\x63\x64\a}\x2\x2\x64\x65\a\x7F"+
		"\x2\x2\x65&\x3\x2\x2\x2\x66g\ay\x2\x2gh\aj\x2\x2hi\ak\x2\x2ij\an\x2\x2"+
		"jq\ag\x2\x2kl\aw\x2\x2lm\ap\x2\x2mn\av\x2\x2no\ak\x2\x2oq\an\x2\x2p\x66"+
		"\x3\x2\x2\x2pk\x3\x2\x2\x2q(\x3\x2\x2\x2rs\a\x63\x2\x2st\ap\x2\x2t{\a"+
		"\x66\x2\x2uv\aq\x2\x2v{\at\x2\x2wx\az\x2\x2xy\aq\x2\x2y{\at\x2\x2zr\x3"+
		"\x2\x2\x2zu\x3\x2\x2\x2zw\x3\x2\x2\x2{*\x3\x2\x2\x2|~\t\x2\x2\x2}|\x3"+
		"\x2\x2\x2~\x7F\x3\x2\x2\x2\x7F}\x3\x2\x2\x2\x7F\x80\x3\x2\x2\x2\x80,\x3"+
		"\x2\x2\x2\x81\x83\t\x2\x2\x2\x82\x81\x3\x2\x2\x2\x83\x84\x3\x2\x2\x2\x84"+
		"\x82\x3\x2\x2\x2\x84\x85\x3\x2\x2\x2\x85\x86\x3\x2\x2\x2\x86\x88\a\x30"+
		"\x2\x2\x87\x89\t\x2\x2\x2\x88\x87\x3\x2\x2\x2\x89\x8A\x3\x2\x2\x2\x8A"+
		"\x88\x3\x2\x2\x2\x8A\x8B\x3\x2\x2\x2\x8B.\x3\x2\x2\x2\x8C\x90\a$\x2\x2"+
		"\x8D\x8F\n\x3\x2\x2\x8E\x8D\x3\x2\x2\x2\x8F\x92\x3\x2\x2\x2\x90\x8E\x3"+
		"\x2\x2\x2\x90\x91\x3\x2\x2\x2\x91\x93\x3\x2\x2\x2\x92\x90\x3\x2\x2\x2"+
		"\x93\x9D\a$\x2\x2\x94\x98\a)\x2\x2\x95\x97\n\x4\x2\x2\x96\x95\x3\x2\x2"+
		"\x2\x97\x9A\x3\x2\x2\x2\x98\x96\x3\x2\x2\x2\x98\x99\x3\x2\x2\x2\x99\x9B"+
		"\x3\x2\x2\x2\x9A\x98\x3\x2\x2\x2\x9B\x9D\a)\x2\x2\x9C\x8C\x3\x2\x2\x2"+
		"\x9C\x94\x3\x2\x2\x2\x9D\x30\x3\x2\x2\x2\x9E\x9F\av\x2\x2\x9F\xA0\at\x2"+
		"\x2\xA0\xA1\aw\x2\x2\xA1\xA8\ag\x2\x2\xA2\xA3\ah\x2\x2\xA3\xA4\a\x63\x2"+
		"\x2\xA4\xA5\an\x2\x2\xA5\xA6\au\x2\x2\xA6\xA8\ag\x2\x2\xA7\x9E\x3\x2\x2"+
		"\x2\xA7\xA2\x3\x2\x2\x2\xA8\x32\x3\x2\x2\x2\xA9\xAA\ap\x2\x2\xAA\xAB\a"+
		"w\x2\x2\xAB\xAC\an\x2\x2\xAC\xAD\an\x2\x2\xAD\x34\x3\x2\x2\x2\xAE\xB0"+
		"\t\x5\x2\x2\xAF\xAE\x3\x2\x2\x2\xB0\xB1\x3\x2\x2\x2\xB1\xAF\x3\x2\x2\x2"+
		"\xB1\xB2\x3\x2\x2\x2\xB2\xB3\x3\x2\x2\x2\xB3\xB4\b\x1B\x2\x2\xB4\x36\x3"+
		"\x2\x2\x2\xB5\xB9\t\x6\x2\x2\xB6\xB8\t\a\x2\x2\xB7\xB6\x3\x2\x2\x2\xB8"+
		"\xBB\x3\x2\x2\x2\xB9\xB7\x3\x2\x2\x2\xB9\xBA\x3\x2\x2\x2\xBA\x38\x3\x2"+
		"\x2\x2\xBB\xB9\x3\x2\x2\x2\xE\x2pz\x7F\x84\x8A\x90\x98\x9C\xA7\xB1\xB9"+
		"\x3\b\x2\x2";
	public static readonly ATN _ATN =
		new ATNDeserializer().Deserialize(_serializedATN.ToCharArray());
}
} // namespace MyAntlr.Content
